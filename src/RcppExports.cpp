// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// age_to_age
double age_to_age(short int cu_index, double age1, short int age1_type, short int age2_type, double y2bh);
RcppExport SEXP _SIndexR_age_to_age(SEXP cu_indexSEXP, SEXP age1SEXP, SEXP age1_typeSEXP, SEXP age2_typeSEXP, SEXP y2bhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type age1(age1SEXP);
    Rcpp::traits::input_parameter< short int >::type age1_type(age1_typeSEXP);
    Rcpp::traits::input_parameter< short int >::type age2_type(age2_typeSEXP);
    Rcpp::traits::input_parameter< double >::type y2bh(y2bhSEXP);
    rcpp_result_gen = Rcpp::wrap(age_to_age(cu_index, age1, age1_type, age2_type, y2bh));
    return rcpp_result_gen;
END_RCPP
}
// fiz_check
short int fiz_check(char fiz);
RcppExport SEXP _SIndexR_fiz_check(SEXP fizSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< char >::type fiz(fizSEXP);
    rcpp_result_gen = Rcpp::wrap(fiz_check(fiz));
    return rcpp_result_gen;
END_RCPP
}
// height_to_index
double height_to_index(short int cu_index, double age, short int age_type, double height, short int si_est_type);
RcppExport SEXP _SIndexR_height_to_index(SEXP cu_indexSEXP, SEXP ageSEXP, SEXP age_typeSEXP, SEXP heightSEXP, SEXP si_est_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type age(ageSEXP);
    Rcpp::traits::input_parameter< short int >::type age_type(age_typeSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< short int >::type si_est_type(si_est_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(height_to_index(cu_index, age, age_type, height, si_est_type));
    return rcpp_result_gen;
END_RCPP
}
// class_to_index
double class_to_index(short int sp_index, char sitecl, char fiz);
RcppExport SEXP _SIndexR_class_to_index(SEXP sp_indexSEXP, SEXP siteclSEXP, SEXP fizSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    Rcpp::traits::input_parameter< char >::type sitecl(siteclSEXP);
    Rcpp::traits::input_parameter< char >::type fiz(fizSEXP);
    rcpp_result_gen = Rcpp::wrap(class_to_index(sp_index, sitecl, fiz));
    return rcpp_result_gen;
END_RCPP
}
// index_to_age
double index_to_age(short int cu_index, double site_height, short int age_type, double site_index, double y2bh);
RcppExport SEXP _SIndexR_index_to_age(SEXP cu_indexSEXP, SEXP site_heightSEXP, SEXP age_typeSEXP, SEXP site_indexSEXP, SEXP y2bhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type site_height(site_heightSEXP);
    Rcpp::traits::input_parameter< short int >::type age_type(age_typeSEXP);
    Rcpp::traits::input_parameter< double >::type site_index(site_indexSEXP);
    Rcpp::traits::input_parameter< double >::type y2bh(y2bhSEXP);
    rcpp_result_gen = Rcpp::wrap(index_to_age(cu_index, site_height, age_type, site_index, y2bh));
    return rcpp_result_gen;
END_RCPP
}
// index_to_height
double index_to_height(short int cu_index, double iage, short int age_type, double site_index, double y2bh, double pi);
RcppExport SEXP _SIndexR_index_to_height(SEXP cu_indexSEXP, SEXP iageSEXP, SEXP age_typeSEXP, SEXP site_indexSEXP, SEXP y2bhSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type iage(iageSEXP);
    Rcpp::traits::input_parameter< short int >::type age_type(age_typeSEXP);
    Rcpp::traits::input_parameter< double >::type site_index(site_indexSEXP);
    Rcpp::traits::input_parameter< double >::type y2bh(y2bhSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(index_to_height(cu_index, iage, age_type, site_index, y2bh, pi));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_VersionNumber
short int Sindex_VersionNumber();
RcppExport SEXP _SIndexR_Sindex_VersionNumber() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Sindex_VersionNumber());
    return rcpp_result_gen;
END_RCPP
}
// Sindex_FirstSpecies
short int Sindex_FirstSpecies();
RcppExport SEXP _SIndexR_Sindex_FirstSpecies() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Sindex_FirstSpecies());
    return rcpp_result_gen;
END_RCPP
}
// Sindex_NextSpecies
short int Sindex_NextSpecies(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_NextSpecies(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_NextSpecies(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_SpecUse
short int Sindex_SpecUse(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_SpecUse(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_SpecUse(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_DefCurve
short int Sindex_DefCurve(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_DefCurve(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_DefCurve(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_DefGICurve
short int Sindex_DefGICurve(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_DefGICurve(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_DefGICurve(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_DefCurveEst
short int Sindex_DefCurveEst(short int sp_index, short int estab);
RcppExport SEXP _SIndexR_Sindex_DefCurveEst(SEXP sp_indexSEXP, SEXP estabSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    Rcpp::traits::input_parameter< short int >::type estab(estabSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_DefCurveEst(sp_index, estab));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_FirstCurve
short int Sindex_FirstCurve(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_FirstCurve(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_FirstCurve(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_NextCurve
short int Sindex_NextCurve(short int sp_index, short int cu_index);
RcppExport SEXP _SIndexR_Sindex_NextCurve(SEXP sp_indexSEXP, SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_NextCurve(sp_index, cu_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_CurveUse
short int Sindex_CurveUse(short int cu_index);
RcppExport SEXP _SIndexR_Sindex_CurveUse(SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_CurveUse(cu_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_CurveToSpecies
short int Sindex_CurveToSpecies(short int cu_index);
RcppExport SEXP _SIndexR_Sindex_CurveToSpecies(SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_CurveToSpecies(cu_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_SITOSI
double Sindex_SITOSI(short int sp_index1, double site, short int sp_index2);
RcppExport SEXP _SIndexR_Sindex_SITOSI(SEXP sp_index1SEXP, SEXP siteSEXP, SEXP sp_index2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index1(sp_index1SEXP);
    Rcpp::traits::input_parameter< double >::type site(siteSEXP);
    Rcpp::traits::input_parameter< short int >::type sp_index2(sp_index2SEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_SITOSI(sp_index1, site, sp_index2));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_SpecCode
std::string Sindex_SpecCode(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_SpecCode(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_SpecCode(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_SpecName
std::string Sindex_SpecName(short int sp_index);
RcppExport SEXP _SIndexR_Sindex_SpecName(SEXP sp_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type sp_index(sp_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_SpecName(sp_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_CurveName
std::string Sindex_CurveName(short int cu_index);
RcppExport SEXP _SIndexR_Sindex_CurveName(SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_CurveName(cu_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_CurveSource
std::string Sindex_CurveSource(short int cu_index);
RcppExport SEXP _SIndexR_Sindex_CurveSource(SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_CurveSource(cu_index));
    return rcpp_result_gen;
END_RCPP
}
// Sindex_CurveNotes
std::string Sindex_CurveNotes(short int cu_index);
RcppExport SEXP _SIndexR_Sindex_CurveNotes(SEXP cu_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Sindex_CurveNotes(cu_index));
    return rcpp_result_gen;
END_RCPP
}
// si_y2bh
double si_y2bh(short int cu_index, double site_index);
RcppExport SEXP _SIndexR_si_y2bh(SEXP cu_indexSEXP, SEXP site_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type site_index(site_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(si_y2bh(cu_index, site_index));
    return rcpp_result_gen;
END_RCPP
}
// si_y2bh05
double si_y2bh05(short int cu_index, double site_index);
RcppExport SEXP _SIndexR_si_y2bh05(SEXP cu_indexSEXP, SEXP site_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< short int >::type cu_index(cu_indexSEXP);
    Rcpp::traits::input_parameter< double >::type site_index(site_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(si_y2bh05(cu_index, site_index));
    return rcpp_result_gen;
END_RCPP
}
// species_map
short int species_map(std::string sc);
RcppExport SEXP _SIndexR_species_map(SEXP scSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type sc(scSEXP);
    rcpp_result_gen = Rcpp::wrap(species_map(sc));
    return rcpp_result_gen;
END_RCPP
}
// species_remap
short int species_remap(std::string sc, char fiz);
RcppExport SEXP _SIndexR_species_remap(SEXP scSEXP, SEXP fizSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type sc(scSEXP);
    Rcpp::traits::input_parameter< char >::type fiz(fizSEXP);
    rcpp_result_gen = Rcpp::wrap(species_remap(sc, fiz));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SIndexR_age_to_age", (DL_FUNC) &_SIndexR_age_to_age, 5},
    {"_SIndexR_fiz_check", (DL_FUNC) &_SIndexR_fiz_check, 1},
    {"_SIndexR_height_to_index", (DL_FUNC) &_SIndexR_height_to_index, 5},
    {"_SIndexR_class_to_index", (DL_FUNC) &_SIndexR_class_to_index, 3},
    {"_SIndexR_index_to_age", (DL_FUNC) &_SIndexR_index_to_age, 5},
    {"_SIndexR_index_to_height", (DL_FUNC) &_SIndexR_index_to_height, 6},
    {"_SIndexR_Sindex_VersionNumber", (DL_FUNC) &_SIndexR_Sindex_VersionNumber, 0},
    {"_SIndexR_Sindex_FirstSpecies", (DL_FUNC) &_SIndexR_Sindex_FirstSpecies, 0},
    {"_SIndexR_Sindex_NextSpecies", (DL_FUNC) &_SIndexR_Sindex_NextSpecies, 1},
    {"_SIndexR_Sindex_SpecUse", (DL_FUNC) &_SIndexR_Sindex_SpecUse, 1},
    {"_SIndexR_Sindex_DefCurve", (DL_FUNC) &_SIndexR_Sindex_DefCurve, 1},
    {"_SIndexR_Sindex_DefGICurve", (DL_FUNC) &_SIndexR_Sindex_DefGICurve, 1},
    {"_SIndexR_Sindex_DefCurveEst", (DL_FUNC) &_SIndexR_Sindex_DefCurveEst, 2},
    {"_SIndexR_Sindex_FirstCurve", (DL_FUNC) &_SIndexR_Sindex_FirstCurve, 1},
    {"_SIndexR_Sindex_NextCurve", (DL_FUNC) &_SIndexR_Sindex_NextCurve, 2},
    {"_SIndexR_Sindex_CurveUse", (DL_FUNC) &_SIndexR_Sindex_CurveUse, 1},
    {"_SIndexR_Sindex_CurveToSpecies", (DL_FUNC) &_SIndexR_Sindex_CurveToSpecies, 1},
    {"_SIndexR_Sindex_SITOSI", (DL_FUNC) &_SIndexR_Sindex_SITOSI, 3},
    {"_SIndexR_Sindex_SpecCode", (DL_FUNC) &_SIndexR_Sindex_SpecCode, 1},
    {"_SIndexR_Sindex_SpecName", (DL_FUNC) &_SIndexR_Sindex_SpecName, 1},
    {"_SIndexR_Sindex_CurveName", (DL_FUNC) &_SIndexR_Sindex_CurveName, 1},
    {"_SIndexR_Sindex_CurveSource", (DL_FUNC) &_SIndexR_Sindex_CurveSource, 1},
    {"_SIndexR_Sindex_CurveNotes", (DL_FUNC) &_SIndexR_Sindex_CurveNotes, 1},
    {"_SIndexR_si_y2bh", (DL_FUNC) &_SIndexR_si_y2bh, 2},
    {"_SIndexR_si_y2bh05", (DL_FUNC) &_SIndexR_si_y2bh05, 2},
    {"_SIndexR_species_map", (DL_FUNC) &_SIndexR_species_map, 1},
    {"_SIndexR_species_remap", (DL_FUNC) &_SIndexR_species_remap, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SIndexR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
